{"version":3,"sources":["webpack://@mwap/docs/./components/async/code.tsx?0649","webpack://@mwap/docs/./components/mdx-components.ts","webpack://@mwap/docs/./pages/article.tsx","webpack://@mwap/docs/./components/async/components-renderer.tsx?9fab"],"names":[],"mappings":"oMAIA,KAAM,GAAmB,SAAQ,IAAM,qDAErC,CACE,UAAW,8BAIA,WAAwB,EAAO,CAC5C,MAAO,iBAAoB,EAAkB,G,aCP/C,QAAe,CACb,KAAI,EACJ,mBAAkB,IAClB,KAAI,KC2BN,EAxBgB,IAAM,CACpB,KAAM,GAAW,iBAAW,MACtB,CAAE,WAAY,WACd,CAAE,mBAAkB,SAAQ,SAAU,SAG1C,UAAW,CACX,YAGE,kBAAU,SAAU,GACtB,EAAO,QAAS,GAAU,EAAS,OAAO,IAAI,IAGhD,KAAM,GAAU,IAAW,EAAkB,CAAE,WAAU,IAEzD,MACE,iCACE,gBAAC,IAAD,KAAO,GAAS,gBAAC,QAAD,KAAQ,IACxB,gBAAC,UAAD,CAAS,UAAU,oBAAoB,M,iEC1B7C,KAAM,GAAmB,SAAQ,IAAM,6BAErC,CACE,UAAW,6CAIA,WAAwB,EAAO,CAC5C,MAAO,iBAAoB,EAAkB","file":"35.ab4cf11acda2eb9e1265.js","sourcesContent":["\nimport * as React from \"react\";\nimport { dynamic } from \"@mwap/async\";\n\nconst DynamicComponent = dynamic(() => import(\n  /* webpackChunkName: \"components_async_code_tsx\" */ \"!!../../../common/temp/node_modules/.pnpm/esbuild-loader@2.12.0_webpack@5.33.2/node_modules/esbuild-loader/dist/index.js??ruleSet[1].rules[3]!./code.tsx\"),\n  {\n    __chunkId: \"components_async_code_tsx\",\n  }\n);\n\nexport default function AsyncComponent(props) {\n  return React.createElement(DynamicComponent, props);\n}\n  ","import { Head } from \"@mwap/head\";\n\nimport Code from \"./async/code\";\nimport ComponentsRenderer from \"./async/components-renderer\";\n\nexport default {\n  Code,\n  ComponentsRenderer,\n  Head,\n};\n","import * as React from \"react\";\nimport { useContext } from \"react\";\nimport mdxHydrate from \"next-mdx-remote-suspense/hydrate\";\nimport { asyncContext } from \"@mwap/async\";\nimport { useLoader } from \"@mwap/loaders\";\nimport { useParams } from \"@mwap/router\";\n\nimport components from \"../components/mdx-components\";\nimport type { ArticleData, ArticleParams } from \"../loaders/article\";\nimport { Head } from \"@mwap/head\";\n\nconst Article = () => {\n  const asyncCtx = useContext(asyncContext);\n  const { article } = useParams<ArticleParams>();\n  const { articleMdxSource, chunks, title } = useLoader<\n    ArticleData,\n    ArticleParams\n  >(\"article\", {\n    article,\n  });\n\n  if (asyncCtx?.chunks && chunks) {\n    chunks.forEach((chunk) => asyncCtx.chunks.add(chunk));\n  }\n\n  const content = mdxHydrate(articleMdxSource, { components });\n\n  return (\n    <>\n      <Head>{title && <title>{title}</title>}</Head>\n      <article className=\"prose max-w-none\">{content}</article>\n    </>\n  );\n};\n\nexport default Article;\n","\nimport * as React from \"react\";\nimport { dynamic } from \"@mwap/async\";\n\nconst DynamicComponent = dynamic(() => import(\n  /* webpackChunkName: \"components_async_components_renderer_tsx\" */ \"!!../../../common/temp/node_modules/.pnpm/esbuild-loader@2.12.0_webpack@5.33.2/node_modules/esbuild-loader/dist/index.js??ruleSet[1].rules[3]!./components-renderer.tsx\"),\n  {\n    __chunkId: \"components_async_components_renderer_tsx\",\n  }\n);\n\nexport default function AsyncComponent(props) {\n  return React.createElement(DynamicComponent, props);\n}\n  "],"sourceRoot":""}